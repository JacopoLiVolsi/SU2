digraph "CPhysicalGeometry::Compute_Wing"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node294 [label="CPhysicalGeometry::\lCompute_Wing",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node294 -> Node295 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node295 [label="CConfig::GetnWingStations",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a2ce243caa05988b4dc407aa8eaaa5403",tooltip="Get the number of sections for computing internal volume. "];
  Node294 -> Node296 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node296 [label="CConfig::GetSemiSpan",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a6654e8460b586ec7022ded455af379d1",tooltip="Get the wing semi span. "];
  Node294 -> Node297 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node297 [label="CConfig::GetStations\l_Bounds",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#ac43fb5306bfa01ee8bb073bdca34b871",tooltip="Get the value of the limits for the sections. "];
  Node294 -> Node298 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node298 [label="CConfig::GetGeo_Description",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#aa442a0400020ede3ab81c2d9a966f8c3",tooltip="Get Description of the geometry to be analyzed. "];
  Node294 -> Node299 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node299 [label="CGeometry::ComputeAirfoil\l_Section",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_geometry.html#a136d597cdcaa37dab258f69727a70a53",tooltip="A virtual member. "];
  Node299 -> Node300 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node300 [label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a300c4884edfc0c2acf395036439004f4",tooltip="Get the total number of boundary markers including send/receive domains. "];
  Node299 -> Node301 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node301 [label="CConfig::GetMarker\l_All_GeoEval",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a0d3d6a63fed3394fa2e2842e260494db",tooltip="Get the monitoring information for a marker val_marker. "];
  Node299 -> Node302 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node302 [label="CVertex::GetVarCoord",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_vertex.html#a060e712c827ad967dc5074539ca84d39",tooltip="Get the value of the coordinate variation due to a surface modification. "];
  Node299 -> Node303 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node303 [label="CVertex::GetNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_vertex.html#a95c513bf927464157ed96b6c79779a1f",tooltip="Get the node of the vertex. "];
  Node299 -> Node304 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node304 [label="CPrimalGrid::GetnNodes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_primal_grid.html#a0efbf2f8391d5177d92bd850016a3783",tooltip="A pure virtual member. "];
  Node299 -> Node305 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node305 [label="CPrimalGrid::GetNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_primal_grid.html#a4fc7b6b6ac5025325c7e68fb56fbeef8",tooltip="A pure virtual member. "];
  Node299 -> Node306 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node306 [label="CPoint::GetCoord",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_point.html#a95fe081d22e96e190cb3edcbf0d6525f",tooltip="Get the coordinates dor the control volume. "];
  Node299 -> Node298 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node299 -> Node307 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node307 [label="CConfig::GetNacelleLocation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#aa0cea4ab0d11d77fdec385ad72c6451e",tooltip="Get the defintion of the nacelle location. "];
  Node299 -> Node308 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node308 [label="CGeometry::SegmentIntersects\lPlane",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_geometry.html#ab9320eb94dc9da5fa75194c90d5bf54d",tooltip="Compute the intersection between a segment and a plane. "];
  Node299 -> Node309 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node309 [label="CBaseMPIWrapper::Allreduce",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base_m_p_i_wrapper.html#a637b6fd917a8ca91ce748ba88e0d66b6"];
  Node309 -> Node310 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node310 [label="CBaseMPIWrapper::CopyData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base_m_p_i_wrapper.html#a4725cc1dd65b161b483e812a538a5e36"];
  Node299 -> Node311 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node311 [label="CBaseMPIWrapper::Allgather",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base_m_p_i_wrapper.html#a55195abbb7206e08a4933fa53cd41923"];
  Node311 -> Node310 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node299 -> Node312 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node312 [label="SU2_TYPE::GetValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespace_s_u2___t_y_p_e.html#a0ed43473f5a450ce028d088427bf10cb",tooltip="Get the (primitive) value of the datatype (needs to be implemented for each new type). "];
  Node294 -> Node313 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node313 [label="CConfig::GetTabular\l_FileFormat",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#ada7c747b29da89590dfbcc33e62e8f3e",tooltip="Get the format of the output solution. "];
  Node294 -> Node314 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node314 [label="CConfig::GetSystemMeasurements",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#afbc5c2467fd51eafa6e05e5bda7d3d3e",tooltip="Governing equations of the flow (it can be different from the run time equation). ..."];
  Node294 -> Node315 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node315 [label="CPhysicalGeometry::\lCompute_Wing_LeadingTrailing",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#a39748319b647e821cc74e60ba87520b1",tooltip="Compute the leading/trailing edge location of an airfoil. "];
  Node294 -> Node316 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node316 [label="CPhysicalGeometry::\lCompute_Area",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#a344c445370d3777ef2c639cad9bf28c6",tooltip="Compute the area of an airfoil. "];
  Node294 -> Node317 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node317 [label="CPhysicalGeometry::\lCompute_MaxThickness",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#a1f25641d4f21ebb86157b2f1180227b6",tooltip="Compute the maximum thickness of an airfoil. "];
  Node317 -> Node318 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node318 [label="CGeometry::SetSpline",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_geometry.html#a43b3e85441f722eac189104e464c5358",tooltip="Given arrays x[1..n] and y[1..n] containing a tabulated function, i.e., yi = f(xi), with x1 < x2 < . . . < xN , and given values yp1 and ypn for the first derivative of the interpolating function at points 1 and n, respectively, this routine returns an array y2[1..n] that contains the second derivatives of the interpolating function at the tabulated points xi. If yp1 and/or ypn are equal to 1 × 1030 or larger, the routine is signaled to set the corresponding boundary condition for a natural spline, with zero second derivative on that boundary. Numerical Recipes: The Art of Scientific Computing, Third Edition in C++. "];
  Node317 -> Node319 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node319 [label="CGeometry::GetSpline",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_geometry.html#ad38cb6e163b9c298a3c5922ecd5c7968",tooltip="Given the arrays xa[1..n] and ya[1..n], which tabulate a function (with the xai’s in order)..."];
  Node294 -> Node320 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node320 [label="CPhysicalGeometry::\lCompute_Chord",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#af8acc167099b1ff40c9f1426d74f06f3",tooltip="Compute the chord of an airfoil. "];
  Node294 -> Node321 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node321 [label="CPhysicalGeometry::\lCompute_Twist",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#acea9117dcbf35f5b32c89c1851c4596b",tooltip="Compute the twist of an airfoil. "];
  Node294 -> Node322 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node322 [label="CPhysicalGeometry::\lCompute_LERadius",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#a3802e8af1449958a24e0ee3e418fcee3",tooltip="Compute the chord of an airfoil. "];
  Node294 -> Node323 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node323 [label="CPhysicalGeometry::\lCompute_Curvature",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#a9c137c12e114edd3cbf48287937b0dc0",tooltip="Compute the curvature of a wing. "];
  Node294 -> Node324 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node324 [label="CPhysicalGeometry::\lCompute_Dihedral",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_physical_geometry.html#a04a23b2e1d1932f6df2d2ee2d83d6536",tooltip="Compute the dihedral of a wing. "];
}
