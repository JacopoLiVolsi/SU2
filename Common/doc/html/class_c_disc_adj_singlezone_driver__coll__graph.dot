digraph "CDiscAdjSinglezoneDriver"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node3 [label="CDiscAdjSinglezoneDriver",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="CSinglezoneDriver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_singlezone_driver.html",tooltip="Class for driving single-zone solvers. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="CDriver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_driver.html",tooltip="Parent class for driving an iteration of a single or multi-zone problem. "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" surface_movement" ,fontname="Helvetica"];
  Node6 [label="CSurfaceMovement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_surface_movement.html",tooltip="Class for moving the surface numerical grid. "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="CGridMovement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_grid_movement.html",tooltip="Class for moving the surface and volumetric numerical grid (2D and 3D problems). "];
  Node8 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FFDBox" ,fontname="Helvetica"];
  Node8 [label="CFreeFormDefBox",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_free_form_def_box.html",tooltip="Class for defining the free form FFDBox structure. "];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BlendingFunction" ,fontname="Helvetica"];
  Node9 [label="CFreeFormBlending",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_free_form_blending.html",tooltip="Class that defines the particular kind of blending function for the free form deformation. "];
  Node10 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" geometry_container" ,fontname="Helvetica"];
  Node10 [label="CGeometry",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_geometry.html",tooltip="Parent class for defining the geometry of the problem (complete geometry, multigrid agglomerated geom..."];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" turbovertex" ,fontname="Helvetica"];
  Node11 [label="CTurboVertex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_turbo_vertex.html",tooltip="Class for vertex definition for turbomachinery (equivalent to edges, but for the boundaries). "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="CVertex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_vertex.html",tooltip="Class for vertex definition (equivalent to edges, but for the boundaries). "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="CDualGrid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_dual_grid.html",tooltip="Class for controlling the dual volume definition. The dual volume is compose by three main elements: ..."];
  Node14 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" newBound\nbound\nface\nelem" ,fontname="Helvetica"];
  Node14 [label="CPrimalGrid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_primal_grid.html",tooltip="Class to define the numerical primal grid. "];
  Node12 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" vertex" ,fontname="Helvetica"];
  Node15 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" edge" ,fontname="Helvetica"];
  Node15 [label="CEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_edge.html",tooltip="Class for defining an edge. "];
  Node13 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" node" ,fontname="Helvetica"];
  Node16 [label="CPoint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_point.html",tooltip="Class for point definition (including control volume definition). "];
  Node13 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numerics_container" ,fontname="Helvetica"];
  Node17 [label="CNumerics",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_numerics.html",tooltip="Class for defining the numerical methods. "];
  Node18 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" interface_container" ,fontname="Helvetica"];
  Node18 [label="CInterface",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_interface.html",tooltip="Main class for defining the physical transfer of information. "];
  Node19 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" driver_output\noutput_container" ,fontname="Helvetica"];
  Node19 [label="COutput",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_output.html",tooltip="Class for writing the convergence history and to write solution data to file. "];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" surfaceDataSorter\nvolumeDataSorter" ,fontname="Helvetica"];
  Node20 [label="CParallelDataSorter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_parallel_data_sorter.html"];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" linearPartitioner" ,fontname="Helvetica"];
  Node21 [label="CLinearPartitioner",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_linear_partitioner.html",tooltip="Helper class that provides the counts for each rank in a linear partitioning given the global count a..."];
  Node22 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" fileWritingTable\nhistoryFileTable\nmultiZoneHeaderTable\nconvergenceTable" ,fontname="Helvetica"];
  Node22 [label="PrintingToolbox::CTablePrinter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_printing_toolbox_1_1_c_table_printer.html",tooltip="Class for writing output in a table. "];
  Node23 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" driver_config\nconfig_container" ,fontname="Helvetica"];
  Node23 [label="CConfig",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html",tooltip="Main class for defining the problem; basically this class reads the configuration file..."];
  Node24 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" solver_container" ,fontname="Helvetica"];
  Node24 [label="CSolver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_solver.html",tooltip="Main class for defining the PDE solution, it requires a child class for each particular solver (Euler..."];
  Node25 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StiffMatrix" ,fontname="Helvetica"];
  Node25 [label="CSysMatrix\< su2double \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_sys_matrix.html"];
  Node26 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OutputVariables\nLinSysAux\nLinSysSol\nLinSysRes" ,fontname="Helvetica"];
  Node26 [label="CSysVector\< su2double \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_sys_vector.html"];
  Node27 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" System" ,fontname="Helvetica"];
  Node27 [label="CSysSolve\< passivedouble \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_sys_solve.html"];
  Node28 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VerificationSolution" ,fontname="Helvetica"];
  Node28 [label="CVerificationSolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_verification_solution.html",tooltip="Class for holding verification PDE solutions, e.g., phi = phi(x,y,z,t), used for initial conditions..."];
  Node29 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Jacobian" ,fontname="Helvetica"];
  Node29 [label="CSysMatrix\< passivedouble \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_sys_matrix.html"];
  Node8 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FFDBox" ,fontname="Helvetica"];
  Node30 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" integration_container" ,fontname="Helvetica"];
  Node30 [label="CIntegration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_integration.html",tooltip="Main class for doing the space integration, time integration, and monitoring of a system of Partial D..."];
  Node31 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" interpolator_container" ,fontname="Helvetica"];
  Node31 [label="CInterpolator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_interpolator.html",tooltip="Main class for defining the interpolator, it requires a child class for each particular interpolation..."];
  Node10 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Geometry\ntarget_geometry\ndonor_geometry" ,fontname="Helvetica"];
  Node32 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" grid_movement" ,fontname="Helvetica"];
  Node32 [label="CVolumetricMovement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_volumetric_movement.html",tooltip="Class for moving the volumetric numerical grid. "];
  Node7 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StiffMatrix" ,fontname="Helvetica"];
  Node26 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LinSysSol\nLinSysRes" ,fontname="Helvetica"];
  Node33 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" System" ,fontname="Helvetica"];
  Node33 [label="CSysSolve\< su2double \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_sys_solve.html"];
  Node34 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" iteration_container" ,fontname="Helvetica"];
  Node34 [label="CIteration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_iteration.html",tooltip="Parent class for defining a single iteration of a physics problem. "];
  Node10 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" geometry" ,fontname="Helvetica"];
  Node17 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" numerics" ,fontname="Helvetica"];
  Node35 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" output_legacy" ,fontname="Helvetica"];
  Node35 [label="COutputLegacy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_output_legacy.html",tooltip="Class for writing the flow, adjoint and linearized solver solution (including the history solution..."];
  Node19 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" direct_output" ,fontname="Helvetica"];
  Node24 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" solver" ,fontname="Helvetica"];
  Node23 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" config" ,fontname="Helvetica"];
  Node30 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" integration" ,fontname="Helvetica"];
  Node34 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" direct_iteration\niteration" ,fontname="Helvetica"];
}
