digraph "CFEM_DG_NSSolver::BC_Custom"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node15 [label="CFEM_DG_NSSolver::BC\l_Custom",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node15 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="CConfig::GetSizeMatMulPadding",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#aea5478f0851e4cb4d11c262fb6c6e8c4",tooltip="Function to make available the matrix size in vectorization in order to optimize the gemm performance..."];
  Node15 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="CConfig::GetTime_Marching",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a864d499ce740184803607801c47abda7",tooltip="Provides information about the time integration, and change the write in the output files information..."];
  Node15 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="CConfig::GetPhysicalTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a4d6b8796bf9552840a48d50c3b0d19b6",tooltip="Get the current physical time. "];
  Node15 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="CFEM_DG_EulerSolver\l::MetaDataChunkOfElem",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m___d_g___euler_solver.html#ad358fa06c0e5b2762ad3258eb2c677e2",tooltip="Template function, which determines some meta data for the chunk of elements/faces that must be treat..."];
  Node15 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="CFEMStandardElementBase\l::GetNIntegration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_element_base.html#aa5ad06a05a1d7b66bccca65521168a3b",tooltip="Function, which makes available the number of integration points for this standard element..."];
  Node15 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="CFEM_DG_EulerSolver\l::LeftStatesIntegrationPoints\lBoundaryFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m___d_g___euler_solver.html#a79debb4e2ee70feac94e9a420705dbf9",tooltip="Function, which computes the left state of a boundary face. "];
  Node21 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="CFEMStandardBoundaryFace\l::GetNDOFsFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_boundary_face.html#a26266f4d68d95c22bbb949fe6d8f5db6",tooltip="Function, which makes available the number of DOFs of the face. "];
  Node21 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="CFEMStandardBoundaryFace\l::GetBasisFaceIntegration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_boundary_face.html#a283dc8babad462022e4621afe0251929",tooltip="Function, which makes available the face basis functions in the integration points. "];
  Node21 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="CBlasStructure::gemm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_blas_structure.html#a40a585307895af828a7f51cd0ccbf81d",tooltip="Function, which carries out a dense matrix product. It is a limited version of the BLAS gemm function..."];
  Node24 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="CConfig::GEMM_Tick",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a2628e094b67a6d5cb410710aa00fa69b",tooltip="Start the timer for profiling subroutines. "];
  Node24 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="CConfig::GEMM_Tock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#ae8d24548bd977c6a76e06ed9814418bb",tooltip="Stop the timer for the GEMM profiling and store results. "];
  Node15 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="CVerificationSolution\l::GetBCState",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_verification_solution.html#ab7c42e689cf7bbc014d1d2d04b95dc76",tooltip="Get the boundary conditions state for an exact solution. "];
  Node27 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base_m_p_i_wrapper.html#a04457c47629bda56704e6a8804833eeb"];
  Node28 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base_m_p_i_wrapper.html#a21ef5681e2acb532d345e9bab173ef07"];
  Node15 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="CFEMStandardBoundaryFace\l::GetNDOFsElem",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_boundary_face.html#aad6afe2fa8d35697a57dfc22a7542176",tooltip="Function, which makes available the number of DOFs of the adjacent element. "];
  Node15 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="CFEMStandardBoundaryFace\l::GetMatDerBasisElemIntegration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_boundary_face.html#af348ced10e1bc0d2a33992de84c13127",tooltip="Function, which makes available the matrix with the derivatives of the element basis functions in the..."];
  Node15 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="CFluidModel::SetTDState_rhoe",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_fluid_model.html#a90fdefd3a55d97d55d5211988c9a7ab1",tooltip="virtual member that would be different for each gas model implemented "];
  Node15 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="CFluidModel::GetPressure",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_fluid_model.html#a169d9e9a0c7f8b5d35642940c62c4ecb",tooltip="Get fluid pressure. "];
  Node15 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="CFluidModel::GetTemperature",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_fluid_model.html#aeba3f29d27211ff50acad59477105969",tooltip="Get fluid temperature. "];
  Node15 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="CFluidModel::GetLaminarViscosity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_fluid_model.html#aacc86b5eb9d89d858870caf49c63eed8",tooltip="Get fluid dynamic viscosity. "];
  Node35 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="CViscosityModel::SetViscosity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_viscosity_model.html#af665c498219e0954aba6a62000be2d92",tooltip="Set Viscosity. "];
  Node35 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="CViscosityModel::GetViscosity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_viscosity_model.html#abd109aeaf6af06115166fe4fe46f733c",tooltip="return viscosity value. "];
  Node35 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="CViscosityModel::SetDerViscosity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_viscosity_model.html#a404a4a2a95dbe269ca84b9df7dbaad35",tooltip="Set Viscosity Derivatives. "];
  Node35 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="CViscosityModel::Getdmudrho_T",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_viscosity_model.html#aeb8f1e75690ad356aa3cef03e63079a5",tooltip="return viscosity partial derivative value. "];
  Node35 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="CViscosityModel::Getdmud\lT_rho",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_viscosity_model.html#a1452210f8279fae334c664ca4a4ae43a",tooltip="return viscosity partial derivative value. "];
  Node15 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="CWallModel::WallShearStress\lAndHeatFlux",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_wall_model.html#aa97d804c3e84dddab5c3e16b5996b16a",tooltip="Virtual function, which computes the wall shear stress and heat flux from the data at the exchange lo..."];
  Node15 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="CFEMStandardBoundaryFace\l::GetPenaltyConstant",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_boundary_face.html#aa2e4984684567bfa78f6556ad41a7c9c",tooltip="Function, which makes available the penalty constant for this standard face. "];
  Node15 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="CFEMStandardElementBase\l::GetWeightsIntegration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_element_base.html#abf33578c3a19de596dc704d3d4d00039",tooltip="Function, which makes available the weights in the integration points. "];
  Node15 -> Node44 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="CFEM_DG_EulerSolver\l::ComputeInviscidFluxesFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m___d_g___euler_solver.html#a4851d39829e12202592d85c36ea36489",tooltip="Function, which computes the inviscid fluxes in face points. "];
  Node44 -> Node45 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="CConfig::GetRiemann\l_Solver_FEM",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#ac5d613463ef0d7b01e66c4e33f586afb",tooltip="Get the kind of Riemann solver for the DG method (FEM flow solver). "];
  Node44 -> Node46 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="CConfig::GetEntropyFix\l_Coeff",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a0f7ace5ebf01fd50bcadab8b50b897c8",tooltip="Get the entropy fix. "];
  Node44 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="CNumerics::SetNormal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_numerics.html#a41903d97957f351cd9ee63ca404985b1",tooltip="Set the value of the normal vector to the face between two points. "];
  Node44 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="CNumerics::SetGridVel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_numerics.html#ae15b9e4ad2008444365109c434e24207",tooltip="Set the velocity of the computational grid. "];
  Node44 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="CNumerics::SetPrimitive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_numerics.html#af72b17d397adf09beed2e99e2daf895c",tooltip="Set the value of the primitive variables. "];
  Node44 -> Node50 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="CNumerics::ComputeResidual",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_numerics.html#abe734316e0047f463f059fd77a281958",tooltip="Compute the numerical residual. "];
  Node15 -> Node51 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="CFEMStandardBoundaryFace\l::GetBasisFaceIntegrationTranspose",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_boundary_face.html#a2d12edcf4ade4e05af14d9c9f2fa6e07",tooltip="Function, which makes available transpose matrix of the face basis functions in the integration point..."];
  Node15 -> Node52 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="CConfig::GetTheta_Interior\l_Penalty_DGFEM",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#aebb368493e43eb306cf65de037c2e9bc",tooltip="Function to make available the multiplication factor theta of the symmetrizing terms in the DG discre..."];
  Node15 -> Node53 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="CFEMStandardBoundaryFace\l::GetMatDerBasisElemIntegration\lTranspose",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_f_e_m_standard_boundary_face.html#a60da212d9394abf0741c61fa2a955ced",tooltip="Function, which makes available the transpose of the matrix with the derivatives of the element basis..."];
}
