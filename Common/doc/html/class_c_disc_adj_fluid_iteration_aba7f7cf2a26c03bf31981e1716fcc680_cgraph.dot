digraph "CDiscAdjFluidIteration::InitializeAdjoint"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node5 [label="CDiscAdjFluidIteration\l::InitializeAdjoint",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="CConfig::GetKind_Solver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a0e2628fc803f14ec6179427ee02e8655",tooltip="Governing equations of the flow (it can be different from the run time equation). ..."];
  Node5 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="CConfig::GetFrozen\l_Visc_Disc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#adb146862f57545364350419287581bbc",tooltip="Provides information about the way in which the turbulence will be treated by the disc..."];
  Node5 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="CConfig::GetWeakly\l_Coupled_Heat",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#adb13f6471b2c0bbef919ae9d8fe95f68",tooltip="Get the heat equation. "];
  Node5 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="CConfig::GetnMarker\l_Fluid_Load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a3cc19e152ee9623de76d631d819b2999",tooltip="Get the total number of markers in which the flow load is computed/employed. "];
  Node5 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="CSolver::SetAdjoint\l_Output",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_solver.html#afacc145d3e6f6a8ff9f3429c1078717a",tooltip="A virtual member. "];
  Node5 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CSolver::SetVertexTractions\lAdjoint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_solver.html#a598cfa469a5cc50f23ce21511410120c",tooltip="Set the adjoints of the vertex tractions to the AD structure. "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="CConfig::GetnMarker_All",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a300c4884edfc0c2acf395036439004f4",tooltip="Get the total number of boundary markers including send/receive domains. "];
  Node11 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="CConfig::GetMarker\l_All_Fluid_Load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#ad7b64f4c824759e55fa28b8fa48796db",tooltip="Get whether marker val_marker is a Fluid_Load marker. "];
  Node11 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="CVertex::GetNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_vertex.html#a95c513bf927464157ed96b6c79779a1f",tooltip="Get the node of the vertex. "];
  Node11 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="CPoint::GetDomain",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_point.html#a1d7e22a60d4cfef356af1cba2bab3e55",tooltip="For parallel computation, its indicates if a point must be computed or not. "];
  Node11 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="SU2_TYPE::SetDerivative",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespace_s_u2___t_y_p_e.html#a0d7db8cc5630100477a515061684a341",tooltip="Set the derivative value of the datatype (needs to be implemented for each new type). "];
  Node11 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="SU2_TYPE::GetValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespace_s_u2___t_y_p_e.html#a0ed43473f5a450ce028d088427bf10cb",tooltip="Get the (primitive) value of the datatype (needs to be implemented for each new type). "];
}
