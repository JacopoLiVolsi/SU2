digraph "CAdjEulerSolver::SetIntBoundary_Jump"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1269 [label="CAdjEulerSolver::SetIntBoundary_Jump",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1269 -> Node1270 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1270 [label="CConfig::GetKind_ObjFunc",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a2d4389021feaed9f2e62f0475f73a718",tooltip="Get the kind of objective function. There are several options: Drag coefficient, Lift coefficient..."];
  Node1269 -> Node1271 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1271 [label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base_m_p_i_wrapper.html#a04457c47629bda56704e6a8804833eeb"];
  Node1271 -> Node1272 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1272 [label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base_m_p_i_wrapper.html#a21ef5681e2acb532d345e9bab173ef07"];
  Node1269 -> Node1273 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1273 [label="SU2_TYPE::Int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespace_s_u2___t_y_p_e.html#a6b48817766d8a6486caa2807a52f6bae",tooltip="Casts the primitive value to int (uses GetValue, already implemented for each type). "];
  Node1273 -> Node1274 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1274 [label="SU2_TYPE::GetValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespace_s_u2___t_y_p_e.html#a0ed43473f5a450ce028d088427bf10cb",tooltip="Get the (primitive) value of the datatype (needs to be implemented for each new type). "];
  Node1269 -> Node1275 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1275 [label="CConfig::GetMarker\l_All_KindBC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a57d43acc1457d2d27095ce006218862e",tooltip="Get the kind of boundary for each marker. "];
  Node1269 -> Node1276 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1276 [label="CVertex::GetNode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_vertex.html#a95c513bf927464157ed96b6c79779a1f",tooltip="Get the node of the vertex. "];
  Node1269 -> Node1277 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1277 [label="CVertex::GetNormal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_vertex.html#a0d289163c6f3384822fcb9ae86fc1c39",tooltip="Copy the the normal vector of a face. "];
  Node1269 -> Node1278 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1278 [label="CPoint::GetDomain",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_point.html#a1d7e22a60d4cfef356af1cba2bab3e55",tooltip="For parallel computation, its indicates if a point must be computed or not. "];
  Node1269 -> Node1279 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1279 [label="CPoint::GetCoord",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_point.html#a95fe081d22e96e190cb3edcbf0d6525f",tooltip="Get the coordinates dor the control volume. "];
  Node1269 -> Node1280 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1280 [label="CConfig::GetWeightCd",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a5cca02225c3d03c8e8bd6cd54b412145",tooltip="Value of the weight of the drag coefficient in the Sonic Boom optimization. "];
  Node1269 -> Node1281 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1281 [label="CConfig::GetAoA",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a6020a5df7025ffb286f9b9f55f3f2773",tooltip="Get the angle of attack of the body. This is the angle between a reference line on a lifting body (of..."];
  Node1269 -> Node1282 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1282 [label="CConfig::GetFixAzimuthalLine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_config.html#a8e2ff62964772743a299fb8320ff3c61",tooltip="Value of the azimuthal line to fix due to a misalignments of the nearfield. "];
  Node1269 -> Node1283 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1283 [label="SU2_TYPE::Short",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespace_s_u2___t_y_p_e.html#a30b9631dab5a12a0c4a93552ff302f0a",tooltip="Casts the primitive value to short (uses GetValue, already implemented for each type). "];
  Node1283 -> Node1274 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1269 -> Node1284 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1284 [label="CSolver::GetNodes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_solver.html#af3198e52a2ea377bb765647b5e697197",tooltip="Allow outside access to the nodes of the solver, containing conservatives, primitives, etc. "];
  Node1269 -> Node1285 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1285 [label="CVariable::GetPressure",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_variable.html#ad08820234eeedeb13105e603af2c67ad",tooltip="A virtual member. "];
  Node1269 -> Node1286 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1286 [label="CSolver::GetPressure_Inf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_solver.html#afeaf42e0257b9b7e1bab7d090b44282f",tooltip="A virtual member. "];
  Node1269 -> Node1287 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1287 [label="CVariable::GetSolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_variable.html#a261483e39c23c1de7cb9aea7e917c121",tooltip="Get the solution. "];
  Node1269 -> Node1288 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1288 [label="CSolver::Gauss_Elimination",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_solver.html#aedaa21eacd9aa0b206272d35ca26e651",tooltip="Gauss method for solving a linear system. "];
  Node1269 -> Node1289 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1289 [label="CAdjEulerVariable::\lSetIntBoundary_Jump",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_adj_euler_variable.html#ac42d491eeaa4ca1675726b59420800a5",tooltip="Set the value of the interior boundary jump vector vector. "];
}
